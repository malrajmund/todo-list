{"version":3,"sources":["resources/logout.svg","redux/actions/types.js","redux/utils/setAuthToken.js","redux/actions/alert.js","redux/actions/auth.js","components/layout/Navbar.js","components/auth/Login.js","components/auth/Register.js","components/list/ListModal.js","redux/actions/list.js","components/list/ListItem.js","components/list/ListWrapper.js","components/routing/PrivateRoute.js","redux/reducers/auth.js","redux/reducers/alert.js","redux/reducers/list.js","redux/reducers/index.js","store.js","components/layout/Alert.js","App.js","index.js"],"names":["LOGIN_SUCCESS","LOGIN_FAIL","USER_LOADED","LOGOUT","REGISTER_FAIL","REGISTER_SUCCESS","SET_ALERT","REMOVE_ALERT","CREATE_LIST","EDIT_LIST","DELETE_LIST","LIST_ERROR","GET_LISTS","SORT_LISTS","setAuthToken","token","axios","defaults","headers","common","Authorization","setAlert","msg","alertType","timeout","dispatch","id","uuid","type","payload","setTimeout","loadUser","a","localStorage","get","res","data","connect","state","isAuthenticated","auth","logout","removeItem","className","src","logoutIcon","alt","onClick","e","login","identifier","password","config","body","JSON","stringify","post","response","message","messages","useState","formData","setFormData","onChange","target","name","value","to","onSubmit","preventDefault","placeholder","register","username","email","password2","createList","listData","editList","task","map","put","deleteList","delete","tasks","handler","setListData","Math","random","isDone","newTask","setNewTask","index","newArray","console","log","checked","item","disabled","length","addTask","ListItem","createdAt","completed","uncompleted","isModalOpen","setIsModalOpen","toggleModal","substr","replace","list","getLists","sortLists","option","loading","searchInput","setSearch","selectType","countCompleted","useEffect","handleSelectTypeChange","listItem","toLowerCase","trim","includes","created_at","Component","component","rest","render","props","initialState","getItem","combineReducers","action","setItem","jwt","alert","filter","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","alerts","App","exact","path","Login","Register","ListWrapper","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b77d0879.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logout.b8745a0e.svg\";","export const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\r\nexport const USER_LOADED = \"USER_LOADED\";\r\nexport const LOGOUT = \"LOGOUT\";\r\nexport const AUTH_ERROR = \"AUTH_ERROR\";\r\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\r\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\r\nexport const SET_ALERT = \"SET_ALERT\";\r\nexport const REMOVE_ALERT = \"REMOVE_ALERT\";\r\nexport const CREATE_LIST = \"CREATE_LIST\";\r\nexport const EDIT_LIST = \"EDIT_LIST\";\r\nexport const DELETE_LIST = \"DELETE_LIST\";\r\nexport const LIST_ERROR = \"LIST_ERROR\";\r\nexport const GET_LISTS = \"GET_LISTS\";\r\nexport const SORT_LISTS = \"SORT_LISTS\";\r\n","import axios from \"axios\";\r\n\r\nconst setAuthToken = (token) => {\r\n  if (token) {\r\n    axios.defaults.headers.common = { Authorization: `Bearer ${token}` };\r\n  } else {\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n  }\r\n};\r\n\r\nexport default setAuthToken;\r\n","import { v4 as uuid } from \"uuid\";\r\nimport { SET_ALERT, REMOVE_ALERT } from \"./types\";\r\n\r\nexport const setAlert = (msg, alertType, timeout) => (dispatch) => {\r\n  const id = uuid();\r\n  dispatch({\r\n    type: SET_ALERT,\r\n    payload: { msg, alertType, id },\r\n  });\r\n  setTimeout(() => dispatch({ type: REMOVE_ALERT, payload: id }), timeout);\r\n};\r\n","import axios from \"axios\";\r\nimport {\r\n  LOGIN_SUCCESS,\r\n  USER_LOADED,\r\n  LOGOUT,\r\n  LOGIN_FAIL,\r\n  AUTH_ERROR,\r\n  REGISTER_FAIL,\r\n  REGISTER_SUCCESS,\r\n} from \"./types\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\nimport { setAlert } from \"./alert\";\r\n\r\nexport const loadUser = () => async (dispatch) => {\r\n  if (localStorage.token) {\r\n    setAuthToken(localStorage.token);\r\n  }\r\n  try {\r\n    const res = await axios.get(\r\n      \"https://recruitment.ultimate.systems/users/me\"\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_LOADED,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: AUTH_ERROR,\r\n    });\r\n  }\r\n};\r\n\r\nexport const login = (identifier, password) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  const body = JSON.stringify({ identifier, password });\r\n\r\n  try {\r\n    const res = await axios.post(\r\n      \"https://recruitment.ultimate.systems/auth/local\",\r\n      body,\r\n      config\r\n    );\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n    dispatch(loadUser());\r\n  } catch (err) {\r\n    dispatch({\r\n      type: LOGIN_FAIL,\r\n    });\r\n\r\n    dispatch(\r\n      setAlert(err.response.data.message[0].messages[0].message, \"danger\", 3000)\r\n    );\r\n  }\r\n};\r\n\r\nexport const register = (username, email, password) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  const body = JSON.stringify({ username, email, password });\r\n  try {\r\n    const res = await axios.post(\r\n      \"https://recruitment.ultimate.systems/auth/local/register\",\r\n      body,\r\n      config\r\n    );\r\n    dispatch({\r\n      type: REGISTER_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n    dispatch(loadUser());\r\n  } catch (err) {\r\n    dispatch({\r\n      type: REGISTER_FAIL,\r\n      payload: err.message,\r\n    });\r\n    dispatch(\r\n      setAlert(err.response.data.message[0].messages[0].message, \"danger\", 3000)\r\n    );\r\n  }\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  if (localStorage.token) {\r\n    localStorage.removeItem(\"token\");\r\n    setAuthToken();\r\n  }\r\n  dispatch({\r\n    type: LOGOUT,\r\n  });\r\n  dispatch(setAlert(\"Logout successfull!\", \"info\", 3000));\r\n};\r\n","import React from \"react\";\r\nimport \"./Navbar.scss\";\r\nimport logoutIcon from \"../../resources/logout.svg\";\r\nimport { logout } from \"../../redux/actions/auth\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Navbar = ({ logout, isAuthenticated }) => {\r\n  return (\r\n    <div className='navbar'>\r\n      <div className='navbar__div'>ToDo-List</div>\r\n      {isAuthenticated ? (\r\n        <img\r\n          className='navbar__img'\r\n          src={logoutIcon}\r\n          alt='logout'\r\n          onClick={(e) => logout()}\r\n        ></img>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(Navbar);\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Login.scss\";\r\nimport { login } from \"../../redux/actions/auth\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { setAlert } from \"../../redux/actions/alert\";\r\n\r\nconst Login = ({ login, isAuthenticated }) => {\r\n  const [formData, setFormData] = useState({\r\n    identifier: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const { identifier, password } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    login(identifier, password);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isAuthenticated ? (\r\n        <Redirect to='/todo-list/ListWrapper' />\r\n      ) : (\r\n        <div className='login'>\r\n          <h1 className='login__h1'>Login</h1>\r\n          <form onSubmit={(e) => onSubmit(e)} className='login__div'>\r\n            <input\r\n              className={\"login__input\"}\r\n              type='text'\r\n              value={identifier}\r\n              name='identifier'\r\n              onChange={(e) => onChange(e)}\r\n              placeholder='Email or Username'\r\n            ></input>\r\n            <input\r\n              className={\"login__input\"}\r\n              type='password'\r\n              value={password}\r\n              name='password'\r\n              onChange={(e) => onChange(e)}\r\n              placeholder='Password'\r\n            ></input>\r\n            <button className='login__button' type='submit'>\r\n              Login\r\n            </button>\r\n          </form>\r\n          <p className='login__p'>or</p>\r\n          <Link to='/todo-list/register' className='login__a'>\r\n            create an account\r\n          </Link>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  setAlert: PropTypes.func.isRequired,\r\n  isAuthenticated: PropTypes.bool.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nexport default connect(mapStateToProps, { login, setAlert })(Login);\r\n","import React, { useState } from \"react\";\r\nimport { register } from \"../../redux/actions/auth\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./Register.scss\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\nimport { setAlert } from \"../../redux/actions/alert\";\r\n\r\nconst Register = ({ register, isAuthenticated, setAlert }) => {\r\n  const [formData, setFormData] = useState({\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    password2: \"\",\r\n  });\r\n\r\n  const { username, email, password, password2 } = formData;\r\n\r\n  const onChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (password !== password2) {\r\n      setAlert(\"Passwords dont match!\", \"danger\", 3000);\r\n    } else {\r\n      register(username, email, password);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isAuthenticated ? (\r\n        <Redirect to='/todo-list/ListWrapper' />\r\n      ) : (\r\n        <div className='register'>\r\n          <Link className='register__iconWrapper' to='/todo-list'>\r\n            <div className='register__icon'></div>\r\n          </Link>\r\n          <h1 className='register__h1'>Create a new account</h1>\r\n          <form\r\n            className='register__inputWrapper'\r\n            onSubmit={(e) => onSubmit(e)}\r\n          >\r\n            <input\r\n              className={\"register__input\"}\r\n              type='text'\r\n              placeholder='Username'\r\n              name='username'\r\n              value={username}\r\n              onChange={(e) => onChange(e)}\r\n            ></input>\r\n            <input\r\n              className={\"register__input\"}\r\n              type='text'\r\n              placeholder='Email'\r\n              name='email'\r\n              value={email}\r\n              onChange={(e) => onChange(e)}\r\n            ></input>\r\n            <input\r\n              className={\"register__input\"}\r\n              type='password'\r\n              placeholder='Password'\r\n              name='password'\r\n              value={password}\r\n              onChange={(e) => onChange(e)}\r\n            ></input>\r\n            <input\r\n              className={\"register__input\"}\r\n              type='password'\r\n              placeholder='Repeat password'\r\n              value={password2}\r\n              name='password2'\r\n              onChange={(e) => onChange(e)}\r\n            ></input>\r\n            {}\r\n            <button className='register__button' type='submit'>\r\n              Create\r\n            </button>\r\n          </form>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nRegister.propTypes = {\r\n  register: PropTypes.func.isRequired,\r\n  setAlert: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nexport default connect(mapStateToProps, { register, setAlert })(Register);\r\n","import React, { useState } from \"react\";\r\nimport \"./ListModal.scss\";\r\nimport { createList, editList, deleteList } from \"../../redux/actions/list\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { setAlert } from \"../../redux/actions/alert\";\r\n\r\nconst ListModal = ({\r\n  name,\r\n  tasks,\r\n  createList,\r\n  editList,\r\n  deleteList,\r\n  setAlert,\r\n  handler,\r\n  id,\r\n}) => {\r\n  const [listData, setListData] = useState({\r\n    name: name,\r\n    task: tasks ? [...tasks] : [],\r\n  });\r\n\r\n  const [newTask, setNewTask] = useState({\r\n    id: Math.random(),\r\n    name: \"\",\r\n    isDone: false,\r\n  });\r\n\r\n  const addTask = (e) => {\r\n    e.preventDefault();\r\n    if (listData.task.length > 0) {\r\n      setListData({ ...listData, task: [...listData.task, newTask] });\r\n    } else {\r\n      setListData({ ...listData, task: [newTask] });\r\n    }\r\n  };\r\n\r\n  const onChange = (e, index) => {\r\n    e.preventDefault();\r\n    let newArray = [...listData.task];\r\n    console.log(newArray);\r\n    if (e.target.type === \"checkbox\") {\r\n      newArray[index].isDone = e.target.checked;\r\n    } else {\r\n      newArray[index].name = e.target.value;\r\n    }\r\n    setListData({ name: listData.name, task: [...newArray] });\r\n    console.log(listData);\r\n  };\r\n\r\n  return (\r\n    <div className={\"ListModal ListModal--open\"}>\r\n      <input\r\n        className='ListModal__input'\r\n        name='name'\r\n        value={listData.name}\r\n        onChange={(e) =>\r\n          setListData({ ...listData, [e.target.name]: e.target.value })\r\n        }\r\n      ></input>\r\n      <div className='ListModal__line'></div>\r\n      <div className='ListModal__tasks'>\r\n        {listData.task ? (\r\n          listData.task.map((item, index) => (\r\n            <div className='ListModal__task' key={item.id}>\r\n              <input\r\n                type='checkbox'\r\n                name='isDone'\r\n                key={Math.random()}\r\n                checked={item.isDone}\r\n                className='ListModal__checkbox'\r\n                onChange={(e) => onChange(e, index)}\r\n              ></input>\r\n              <input\r\n                type='text'\r\n                name='name'\r\n                className='ListModal__taskName'\r\n                value={item.name}\r\n                onChange={(e) => onChange(e, index)}\r\n              ></input>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n        <form className='ListModal__task'>\r\n          <input\r\n            type='checkbox'\r\n            name='isDone'\r\n            className='ListModal__checkbox'\r\n            checked={newTask.isDone}\r\n            onChange={(e) =>\r\n              setNewTask({ ...newTask, [e.target.name]: e.target.checked })\r\n            }\r\n          ></input>\r\n          <input\r\n            className='ListModal__taskName'\r\n            type='text'\r\n            value={newTask.name}\r\n            placeholder='New task'\r\n            name='name'\r\n            onChange={(e) =>\r\n              setNewTask({ ...newTask, [e.target.name]: e.target.value })\r\n            }\r\n          ></input>\r\n          <div>\r\n            <button\r\n              className='ListModal__button ListModal__button--orange'\r\n              disabled={\r\n                newTask.name === \"\" || newTask.name.length <= 0 ? true : false\r\n              }\r\n              onClick={(e) => {\r\n                addTask(e);\r\n                setNewTask({ name: \"\", isDone: false });\r\n              }}\r\n              type='submit'\r\n            >\r\n              ADD\r\n            </button>\r\n            <button\r\n              onClick={(e) => {\r\n                setNewTask({ name: \"\", isDone: false });\r\n                e.preventDefault();\r\n              }}\r\n              className='ListModal__button ListModal__button--darkOrange'\r\n            >\r\n              CANCEL\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      <div>\r\n        <button\r\n          className='ListModal__button ListModal__button--gray'\r\n          onClick={handler}\r\n        >\r\n          CANCEL\r\n        </button>\r\n        <button\r\n          className='ListModal__button ListModal__button--orange'\r\n          onClick={(e) => {\r\n            id ? editList(id, listData) : createList(listData);\r\n            handler();\r\n          }}\r\n          disabled={\r\n            listData.task.length === 0 || listData.name.length <= 0\r\n              ? true\r\n              : false\r\n          }\r\n        >\r\n          SAVE\r\n        </button>\r\n        <button\r\n          className='ListModal__button ListModal__button--darkOrange'\r\n          onClick={(e) => {\r\n            deleteList(id);\r\n            handler();\r\n          }}\r\n          disabled={!tasks ? true : false}\r\n        >\r\n          DELETE\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nListModal.propTypes = {\r\n  createList: PropTypes.func.isRequired,\r\n  editList: PropTypes.func.isRequired,\r\n  deleteList: PropTypes.func.isRequired,\r\n  setAlert: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { createList, editList, deleteList, setAlert })(\r\n  ListModal\r\n);\r\n","import axios from \"axios\";\r\nimport {\r\n  CREATE_LIST,\r\n  EDIT_LIST,\r\n  DELETE_LIST,\r\n  LIST_ERROR,\r\n  GET_LISTS,\r\n  SORT_LISTS,\r\n} from \"./types\";\r\nimport { setAlert } from \"./alert\";\r\n\r\nexport const createList = (listData) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  const body = JSON.stringify(listData);\r\n  try {\r\n    const res = await axios.post(\r\n      \"https://recruitment.ultimate.systems/to-do-lists\",\r\n      body,\r\n      config\r\n    );\r\n    dispatch({\r\n      type: CREATE_LIST,\r\n      payload: res.data,\r\n    });\r\n    dispatch(setAlert(`List \"${res.data.name}\" created!`, \"success\", 3000));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: LIST_ERROR,\r\n    });\r\n    dispatch(setAlert(err.message, \"danger\", 3000));\r\n  }\r\n};\r\n\r\nexport const getLists = () => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  try {\r\n    const res = await axios.get(\r\n      \"https://recruitment.ultimate.systems/to-do-lists\",\r\n      config\r\n    );\r\n    dispatch({\r\n      type: GET_LISTS,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: LIST_ERROR,\r\n    });\r\n    dispatch(setAlert(err.message, \"danger\", 3000));\r\n  }\r\n};\r\n\r\nexport const editList = (id, listData) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  const { name } = listData;\r\n  const task = listData.task.map(({ id, ...rest }) => rest);\r\n  const body = JSON.stringify({ name, task });\r\n  try {\r\n    const res = await axios.put(\r\n      `https://recruitment.ultimate.systems/to-do-lists/${id}`,\r\n      body,\r\n      config\r\n    );\r\n    dispatch({\r\n      type: EDIT_LIST,\r\n      payload: res.data,\r\n    });\r\n    dispatch(setAlert(`List \"${res.data.name}\" edited!`, \"success\", 3000));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: LIST_ERROR,\r\n    });\r\n    dispatch(setAlert(err.message, \"danger\", 3000));\r\n  }\r\n};\r\n\r\nexport const deleteList = (id) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  try {\r\n    const res = await axios.delete(\r\n      `https://recruitment.ultimate.systems/to-do-lists/${id}`,\r\n      config\r\n    );\r\n    dispatch({\r\n      type: DELETE_LIST,\r\n      payload: res.data,\r\n    });\r\n    dispatch(setAlert(`List \"${res.data.name}\" deleted!`, \"info\", 3000));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: LIST_ERROR,\r\n    });\r\n    dispatch(setAlert(err.message, \"danger\", 3000));\r\n  }\r\n};\r\n\r\nexport const sortLists = (option) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  try {\r\n    const res = await axios.get(\r\n      `https://recruitment.ultimate.systems/to-do-lists?_sort=${option}`,\r\n      config\r\n    );\r\n    dispatch({\r\n      type: SORT_LISTS,\r\n      payload: res.data,\r\n    });\r\n    dispatch(setAlert(`List sorted by ${option}!`, \"info\", 3000));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: LIST_ERROR,\r\n    });\r\n    dispatch(setAlert(err.message, \"danger\", 3000));\r\n  }\r\n};\r\n","import React, { useState } from \"react\";\r\nimport ListModal from \"./ListModal\";\r\nimport \"./ListItem.scss\";\r\n\r\nconst ListItem = ({ name, createdAt, completed, uncompleted, tasks, id }) => {\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const toggleModal = () => {\r\n    setIsModalOpen(!isModalOpen);\r\n  };\r\n  return (\r\n    <>\r\n      <div className='ListItem' onClick={toggleModal}>\r\n        <div className='ListItem__name'>{name}</div>\r\n        <div className='ListItem__date'>\r\n          {\"Created at: \" + createdAt.substr(0, 19).replace(\"T\", \" \")}\r\n        </div>\r\n        <div className='ListItem__wrapper'>\r\n          <div className='ListItem__completed'>{\"Completed: \" + completed}</div>\r\n          <div className='ListItem__uncompleted'>\r\n            {\"Uncompleted: \" + uncompleted}\r\n          </div>\r\n          <div className='ListItem__all'>\r\n            {\"All: \" + (completed + uncompleted)}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {isModalOpen ? (\r\n        <ListModal\r\n          id={id}\r\n          name={name}\r\n          tasks={tasks}\r\n          handler={toggleModal}\r\n        ></ListModal>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ListItem;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ListItem from \"./ListItem\";\r\nimport ListModal from \"./ListModal\";\r\nimport \"./ListWrapper.scss\";\r\nimport { getLists, sortLists } from \"../../redux/actions/list\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst ListWrapper = ({\r\n  getLists,\r\n  sortLists,\r\n  list: { loading, list },\r\n  auth,\r\n}) => {\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const toggleModal = () => {\r\n    setIsModalOpen(!isModalOpen);\r\n  };\r\n\r\n  const [searchInput, setSearch] = useState(\"\");\r\n  const [selectType, setSelectType] = useState([\r\n    \"name\",\r\n    \"created_at\",\r\n    \"updated_at\",\r\n  ]);\r\n\r\n  const handleSelectTypeChange = (e) => selectType[e.target.value];\r\n\r\n  const countCompleted = (tasks, type) => {\r\n    let completed = 0;\r\n    let uncompleted = 0;\r\n    tasks.task.map((item) => {\r\n      if (item.isDone === true) {\r\n        return completed++;\r\n      } else {\r\n        return uncompleted++;\r\n      }\r\n    });\r\n    return type === \"completed\" ? completed : uncompleted;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!auth.loading) {\r\n      getLists();\r\n    }\r\n  }, [auth.loading, getLists]);\r\n  return (\r\n    <div className={\"ListWrapper\"}>\r\n      <div className='ListWrapper__inputWrapper'>\r\n        <input\r\n          type='text'\r\n          placeholder='Search'\r\n          name='search'\r\n          className='ListWrapper__input'\r\n          value={searchInput}\r\n          onChange={(e) => setSearch(e.target.value)}\r\n        ></input>\r\n        <select\r\n          id='options'\r\n          name='Sort by'\r\n          className='ListWrapper__select'\r\n          onChange={(e) => {\r\n            handleSelectTypeChange(e);\r\n            sortLists(e.target.value);\r\n          }}\r\n        >\r\n          {selectType.map((item) => (\r\n            <option value={item}>{item.replace(\"_\", \" \")}</option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n      {!loading ? (\r\n        list.map((listItem) =>\r\n          listItem.name\r\n            .toLowerCase()\r\n            .trim()\r\n            .includes(searchInput.toLowerCase().trim()) ? (\r\n            <ListItem\r\n              name={listItem.name}\r\n              createdAt={listItem.created_at}\r\n              completed={countCompleted(listItem, \"completed\")}\r\n              uncompleted={countCompleted(listItem)}\r\n              tasks={listItem.task}\r\n              handler={toggleModal}\r\n              id={listItem.id}\r\n              key={listItem.id}\r\n            />\r\n          ) : null\r\n        )\r\n      ) : (\r\n        <div className='ListWrapper__loading'></div>\r\n      )}\r\n      {list && list.length === 0 && !loading ? (\r\n        <div className='ListWrapper__info'>Nothing here :/</div>\r\n      ) : null}\r\n\r\n      <div className='ListWrapper__addButton' onClick={toggleModal}></div>\r\n      {isModalOpen ? (\r\n        <ListModal name='List name' handler={toggleModal} />\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nListWrapper.propTypes = {\r\n  getLists: PropTypes.func.isRequired,\r\n  sortLists: PropTypes.func.isRequired,\r\n  list: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  list: state.list,\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getLists, sortLists })(ListWrapper);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  auth: { isAuthenticated, loading },\r\n  ...rest\r\n}) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) =>\r\n      !isAuthenticated && !loading ? (\r\n        <Redirect to='/todo-list/' />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nPrivateRoute.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import {\r\n  LOGOUT,\r\n  USER_LOADED,\r\n  LOGIN_FAIL,\r\n  LOGIN_SUCCESS,\r\n  REGISTER_FAIL,\r\n  REGISTER_SUCCESS,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  token: localStorage.getItem(\"token\"),\r\n  isAuthenticated: null,\r\n  loading: true,\r\n};\r\n\r\nexport default function authReducer(state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case USER_LOADED:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n      };\r\n    case LOGIN_SUCCESS:\r\n    case REGISTER_SUCCESS:\r\n      localStorage.setItem(\"token\", payload.jwt);\r\n      return {\r\n        ...state,\r\n        token: payload.jwt,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n      };\r\n    case REGISTER_FAIL:\r\n    case LOGIN_FAIL:\r\n    case LOGOUT:\r\n      localStorage.removeItem(\"token\");\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SET_ALERT, REMOVE_ALERT } from \"../actions/types\";\r\n\r\nconst initialState = [];\r\n\r\nexport default function alertReducer(state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case SET_ALERT:\r\n      return [...state, payload];\r\n    case REMOVE_ALERT:\r\n      return state.filter((alert) => alert.id !== payload);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  CREATE_LIST,\r\n  EDIT_LIST,\r\n  DELETE_LIST,\r\n  LIST_ERROR,\r\n  GET_LISTS,\r\n  SORT_LISTS,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  list: [],\r\n  loading: true,\r\n};\r\n\r\nexport default function authReducer(state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case CREATE_LIST:\r\n      return {\r\n        ...state,\r\n        list: [...state.list, payload],\r\n        loading: false,\r\n      };\r\n    case GET_LISTS:\r\n      return {\r\n        ...state,\r\n        list: [...payload],\r\n        loading: false,\r\n      };\r\n    case EDIT_LIST:\r\n      return {\r\n        ...state,\r\n        list: [...state.list.filter((item) => item.id !== payload.id), payload],\r\n        loading: false,\r\n      };\r\n    case LIST_ERROR: {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n    }\r\n    case DELETE_LIST: {\r\n      return {\r\n        ...state,\r\n        list: [...state.list.filter((item) => item.id !== payload.id)],\r\n        loading: false,\r\n      };\r\n    }\r\n    case SORT_LISTS: {\r\n      return {\r\n        ...state,\r\n        list: [...payload],\r\n        loading: false,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport auth from \"./auth\";\r\nimport alert from \"./alert\";\r\nimport list from \"./list\";\r\n\r\nexport default combineReducers({\r\n  auth,\r\n  alert,\r\n  list,\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./redux/reducers\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./Alert.scss\";\r\n\r\nconst Alert = ({ alerts }) => {\r\n  return (\r\n    <>\r\n      {alerts !== null && alerts.length > 0 ? (\r\n        alerts.map((alert) => (\r\n          <div className={`alert alert--${alert.alertType}`} key={alert.id}>\r\n            {alert.msg}\r\n          </div>\r\n        ))\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nAlert.propTypes = {\r\n  alerts: PropTypes.array.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  alerts: state.alert,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Alert);\r\n","import React, { useEffect } from \"react\";\nimport Navbar from \"./components/layout/Navbar\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Login from \"./components/auth/Login\";\nimport Register from \"./components/auth/Register\";\nimport ListWrapper from \"./components/list/ListWrapper\";\nimport PrivateRoute from \"./components/routing/PrivateRoute\";\n\n//Redux\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport { loadUser } from \"./redux/actions/auth\";\nimport setAuthToken from \"./redux/utils/setAuthToken\";\nimport Alert from \"./components/layout/Alert\";\n\nconst App = () => {\n  useEffect(() => {\n    if (localStorage.token) {\n      setAuthToken(localStorage.token);\n    }\n    store.dispatch(loadUser());\n  }, []);\n  return (\n    <Provider store={store}>\n      <Router>\n        <Navbar />\n        <Alert />\n        <Switch>\n          <Route exact path='/todo-list' component={Login} />\n          <Route exact path='/todo-list/register' component={Register} />\n          <PrivateRoute\n            exact\n            path='/todo-list/ListWrapper'\n            component={ListWrapper}\n          />\n        </Switch>\n      </Router>\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}