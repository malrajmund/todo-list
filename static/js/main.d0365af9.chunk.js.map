{"version":3,"sources":["resources/logout.svg","redux/actions/types.js","redux/utils/setAuthToken.js","redux/actions/alert.js","redux/actions/auth.js","components/layout/Navbar.js","components/auth/Login.js","components/auth/Register.js","components/list/ListModal.js","redux/actions/list.js","components/list/ListItem.js","components/list/ListWrapper.js","components/routing/PrivateRoute.js","redux/reducers/auth.js","redux/reducers/alert.js","redux/reducers/list.js","redux/reducers/index.js","store.js","components/layout/Alert.js","App.js","index.js"],"names":["LOGIN_SUCCESS","LOGIN_FAIL","USER_LOADED","LOGOUT","REGISTER_FAIL","REGISTER_SUCCESS","SET_ALERT","REMOVE_ALERT","CREATE_LIST","EDIT_LIST","DELETE_LIST","LIST_ERROR","GET_LISTS","SORT_LISTS","setAuthToken","token","axios","defaults","headers","common","Authorization","setAlert","msg","alertType","timeout","dispatch","id","uuid","type","payload","setTimeout","loadUser","a","localStorage","get","res","data","connect","state","isAuthenticated","auth","logout","removeItem","className","src","logoutIcon","alt","onClick","e","login","identifier","password","config","body","JSON","stringify","post","message","useState","formData","setFormData","onChange","target","name","value","to","onSubmit","preventDefault","placeholder","register","username","email","response","console","log","password2","createList","listData","editList","task","map","put","deleteList","delete","tasks","handler","setListData","Math","random","isDone","newTask","setNewTask","index","newArray","checked","item","disabled","length","addTask","ListItem","createdAt","completed","uncompleted","isModalOpen","setIsModalOpen","toggleModal","substr","replace","list","getLists","sortLists","option","loading","searchInput","setSearch","selectType","countCompleted","useEffect","handleSelectTypeChange","listItem","toLowerCase","trim","includes","created_at","Component","component","rest","render","props","initialState","getItem","combineReducers","action","setItem","jwt","alert","filter","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","alerts","App","exact","path","Login","Register","ListWrapper","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d0365af9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logout.b8745a0e.svg\";","export const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\r\nexport const USER_LOADED = \"USER_LOADED\";\r\nexport const LOGOUT = \"LOGOUT\";\r\nexport const AUTH_ERROR = \"AUTH_ERROR\";\r\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\r\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\r\nexport const SET_ALERT = \"SET_ALERT\";\r\nexport const REMOVE_ALERT = \"REMOVE_ALERT\";\r\nexport const CREATE_LIST = \"CREATE_LIST\";\r\nexport const EDIT_LIST = \"EDIT_LIST\";\r\nexport const DELETE_LIST = \"DELETE_LIST\";\r\nexport const LIST_ERROR = \"LIST_ERROR\";\r\nexport const GET_LISTS = \"GET_LISTS\";\r\nexport const SORT_LISTS = \"SORT_LISTS\";\r\n","import axios from \"axios\";\r\n\r\nconst setAuthToken = (token) => {\r\n  if (token) {\r\n    axios.defaults.headers.common = { Authorization: `Bearer ${token}` };\r\n  } else {\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n  }\r\n};\r\n\r\nexport default setAuthToken;\r\n","import { v4 as uuid } from \"uuid\";\r\nimport { SET_ALERT, REMOVE_ALERT } from \"./types\";\r\n\r\nexport const setAlert = (msg, alertType, timeout) => (dispatch) => {\r\n  const id = uuid();\r\n  dispatch({\r\n    type: SET_ALERT,\r\n    payload: { msg, alertType, id },\r\n  });\r\n  setTimeout(() => dispatch({ type: REMOVE_ALERT, payload: id }), timeout);\r\n};\r\n","import axios from \"axios\";\r\nimport {\r\n  LOGIN_SUCCESS,\r\n  USER_LOADED,\r\n  LOGOUT,\r\n  LOGIN_FAIL,\r\n  AUTH_ERROR,\r\n  REGISTER_FAIL,\r\n  REGISTER_SUCCESS,\r\n} from \"./types\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\nimport { setAlert } from \"./alert\";\r\n\r\nexport const loadUser = () => async (dispatch) => {\r\n  if (localStorage.token) {\r\n    setAuthToken(localStorage.token);\r\n  }\r\n  try {\r\n    const res = await axios.get(\r\n      \"https://recruitment.ultimate.systems/users/me\"\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_LOADED,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: AUTH_ERROR,\r\n    });\r\n  }\r\n};\r\n\r\nexport const login = (identifier, password) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  const body = JSON.stringify({ identifier, password });\r\n\r\n  try {\r\n    const res = await axios.post(\r\n      \"https://recruitment.ultimate.systems/auth/local\",\r\n      body,\r\n      config\r\n    );\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n    dispatch(loadUser());\r\n  } catch (err) {\r\n    dispatch({\r\n      type: LOGIN_FAIL,\r\n    });\r\n    dispatch(setAlert(err.message, \"danger\", 3000));\r\n  }\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  if (localStorage.token) {\r\n    localStorage.removeItem(\"token\");\r\n    setAuthToken();\r\n  }\r\n  dispatch({\r\n    type: LOGOUT,\r\n  });\r\n  dispatch(setAlert(\"Logout successfull!\", \"danger\", 3000));\r\n};\r\n\r\nexport const register = (username, email, password) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  const body = JSON.stringify(username, email, password);\r\n  try {\r\n    const res = await axios.post(\r\n      \"https://recruitment.ultimate.systems/auth/local/register\",\r\n      body,\r\n      config\r\n    );\r\n    dispatch({\r\n      type: REGISTER_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n    dispatch(loadUser());\r\n  } catch (err) {\r\n    dispatch({\r\n      type: REGISTER_FAIL,\r\n      payload: err.message,\r\n    });\r\n    err.response ? console.log(err.response) : console.log(err.message);\r\n    dispatch(setAlert(err.message, \"danger\", 3000));\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport \"./Navbar.scss\";\r\nimport logoutIcon from \"../../resources/logout.svg\";\r\nimport { logout } from \"../../redux/actions/auth\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Navbar = ({ logout, isAuthenticated }) => {\r\n  return (\r\n    <div className='navbar'>\r\n      <div className='navbar__div'>ToDo-List</div>\r\n      {isAuthenticated ? (\r\n        <img\r\n          className='navbar__img'\r\n          src={logoutIcon}\r\n          alt='logout'\r\n          onClick={(e) => logout()}\r\n        ></img>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(Navbar);\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Login.scss\";\r\nimport { login } from \"../../redux/actions/auth\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { setAlert } from \"../../redux/actions/alert\";\r\n\r\nconst Login = ({ login, isAuthenticated }) => {\r\n  const [formData, setFormData] = useState({\r\n    identifier: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const { identifier, password } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    login(identifier, password);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isAuthenticated ? (\r\n        <Redirect to='/todo-list/ListWrapper' />\r\n      ) : (\r\n        <div className='login'>\r\n          <h1 className='login__h1'>Login</h1>\r\n          <form onSubmit={(e) => onSubmit(e)} className='login__div'>\r\n            <input\r\n              className={\"login__input\"}\r\n              type='text'\r\n              value={identifier}\r\n              name='identifier'\r\n              onChange={(e) => onChange(e)}\r\n              placeholder='Email or Username'\r\n            ></input>\r\n            <input\r\n              className={\"login__input\"}\r\n              type='password'\r\n              value={password}\r\n              name='password'\r\n              onChange={(e) => onChange(e)}\r\n              placeholder='Password'\r\n            ></input>\r\n            <button className='login__button' type='submit'>\r\n              Login\r\n            </button>\r\n          </form>\r\n          <p className='login__p'>or</p>\r\n          <Link to='/todo-list/register' className='login__a'>\r\n            create an account\r\n          </Link>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  setAlert: PropTypes.func.isRequired,\r\n  isAuthenticated: PropTypes.bool.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nexport default connect(mapStateToProps, { login, setAlert })(Login);\r\n","import React, { useState } from \"react\";\r\nimport { register } from \"../../redux/actions/auth\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./Register.scss\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\n\r\nconst Register = ({ register, isAuthenticated }) => {\r\n  const [formData, setFormData] = useState({\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    password2: \"\",\r\n  });\r\n\r\n  const { username, email, password, password2 } = formData;\r\n\r\n  const onChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    register({ username, email, password });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isAuthenticated ? (\r\n        <Redirect to='/todo-list/ListWrapper' />\r\n      ) : (\r\n        <div className='register'>\r\n          <Link className='register__iconWrapper' to='/todo-list'>\r\n            <div className='register__icon'></div>\r\n          </Link>\r\n          <h1 className='register__h1'>Create a new account</h1>\r\n          <form\r\n            className='register__inputWrapper'\r\n            onSubmit={(e) => onSubmit(e)}\r\n          >\r\n            <input\r\n              className={\"register__input\"}\r\n              type='text'\r\n              placeholder='Username'\r\n              name='username'\r\n              value={username}\r\n              onChange={(e) => onChange(e)}\r\n            ></input>\r\n            <input\r\n              className={\"register__input\"}\r\n              type='text'\r\n              placeholder='Email'\r\n              name='email'\r\n              value={email}\r\n              onChange={(e) => onChange(e)}\r\n            ></input>\r\n            <input\r\n              className={\"register__input\"}\r\n              type='password'\r\n              placeholder='Password'\r\n              name='password'\r\n              value={password}\r\n              onChange={(e) => onChange(e)}\r\n            ></input>\r\n            <input\r\n              className={\"register__input\"}\r\n              type='password'\r\n              placeholder='Repeat password'\r\n              value={password2}\r\n              name='password2'\r\n              onChange={(e) => onChange(e)}\r\n            ></input>\r\n            {}\r\n            <button className='register__button' type='submit'>\r\n              Create\r\n            </button>\r\n          </form>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nRegister.propTypes = {\r\n  register: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nexport default connect(mapStateToProps, { register })(Register);\r\n","import React, { useState } from \"react\";\r\nimport \"./ListModal.scss\";\r\nimport { createList, editList, deleteList } from \"../../redux/actions/list\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst ListModal = ({\r\n  name,\r\n  tasks,\r\n  createList,\r\n  editList,\r\n  deleteList,\r\n  handler,\r\n  id,\r\n}) => {\r\n  const [listData, setListData] = useState({\r\n    name: name,\r\n    task: tasks ? [...tasks] : [],\r\n  });\r\n\r\n  const [newTask, setNewTask] = useState({\r\n    id: Math.random(),\r\n    name: \"\",\r\n    isDone: false,\r\n  });\r\n\r\n  const addTask = (e) => {\r\n    e.preventDefault();\r\n    if (listData.task.length > 0) {\r\n      setListData({ ...listData, task: [...listData.task, newTask] });\r\n    } else {\r\n      setListData({ ...listData, task: [newTask] });\r\n    }\r\n  };\r\n\r\n  const onChange = (e, index) => {\r\n    e.preventDefault();\r\n    let newArray = [...listData.task];\r\n    console.log(newArray);\r\n    if (e.target.type === \"checkbox\") {\r\n      newArray[index].isDone = e.target.checked;\r\n    } else {\r\n      newArray[index].name = e.target.value;\r\n    }\r\n    setListData({ name: listData.name, task: [...newArray] });\r\n    console.log(listData);\r\n  };\r\n\r\n  return (\r\n    <div className={\"ListModal ListModal--open\"}>\r\n      <input\r\n        className='ListModal__input'\r\n        name='name'\r\n        value={listData.name}\r\n        onChange={(e) =>\r\n          setListData({ ...listData, [e.target.name]: e.target.value })\r\n        }\r\n      ></input>\r\n      <div className='ListModal__line'></div>\r\n      <div className='ListModal__tasks'>\r\n        {listData.task ? (\r\n          listData.task.map((item, index) => (\r\n            <div className='ListModal__task' key={item.id}>\r\n              <input\r\n                type='checkbox'\r\n                name='isDone'\r\n                key={Math.random()}\r\n                checked={item.isDone}\r\n                className='ListModal__checkbox'\r\n                onChange={(e) => onChange(e, index)}\r\n              ></input>\r\n              <input\r\n                type='text'\r\n                name='name'\r\n                className='ListModal__taskName'\r\n                value={item.name}\r\n                onChange={(e) => onChange(e, index)}\r\n              ></input>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n        <form className='ListModal__task'>\r\n          <input\r\n            type='checkbox'\r\n            name='isDone'\r\n            className='ListModal__checkbox'\r\n            checked={newTask.isDone}\r\n            onChange={(e) =>\r\n              setNewTask({ ...newTask, [e.target.name]: e.target.checked })\r\n            }\r\n          ></input>\r\n          <input\r\n            className='ListModal__taskName'\r\n            type='text'\r\n            value={newTask.name}\r\n            placeholder='New task'\r\n            name='name'\r\n            onChange={(e) =>\r\n              setNewTask({ ...newTask, [e.target.name]: e.target.value })\r\n            }\r\n          ></input>\r\n          <div>\r\n            <button\r\n              className='ListModal__button ListModal__button--orange'\r\n              disabled={\r\n                newTask.name === \"\" || newTask.name.length <= 0 ? true : false\r\n              }\r\n              onClick={(e) => {\r\n                addTask(e);\r\n                setNewTask({ name: \"\", isDone: false });\r\n              }}\r\n              type='submit'\r\n            >\r\n              ADD\r\n            </button>\r\n            <button\r\n              onClick={(e) => {\r\n                setNewTask({ name: \"\", isDone: false });\r\n                e.preventDefault();\r\n              }}\r\n              className='ListModal__button ListModal__button--darkOrange'\r\n            >\r\n              CANCEL\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      <div>\r\n        <button\r\n          className='ListModal__button ListModal__button--gray'\r\n          onClick={handler}\r\n        >\r\n          CANCEL\r\n        </button>\r\n        <button\r\n          className='ListModal__button ListModal__button--orange'\r\n          onClick={(e) => {\r\n            id ? editList(id, listData) : createList(listData);\r\n            handler();\r\n          }}\r\n          disabled={\r\n            listData.task.length === 0 || listData.name.length <= 0\r\n              ? true\r\n              : false\r\n          }\r\n        >\r\n          SAVE\r\n        </button>\r\n        <button\r\n          className='ListModal__button ListModal__button--darkOrange'\r\n          onClick={(e) => {\r\n            deleteList(id);\r\n            handler();\r\n          }}\r\n        >\r\n          DELETE\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nListModal.propTypes = {\r\n  createList: PropTypes.func.isRequired,\r\n  editList: PropTypes.func.isRequired,\r\n  deleteList: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { createList, editList, deleteList })(ListModal);\r\n","import axios from \"axios\";\r\nimport {\r\n  CREATE_LIST,\r\n  EDIT_LIST,\r\n  DELETE_LIST,\r\n  LIST_ERROR,\r\n  GET_LISTS,\r\n  SORT_LISTS,\r\n} from \"./types\";\r\nimport { setAlert } from \"./alert\";\r\n\r\nexport const createList = (listData) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  const body = JSON.stringify(listData);\r\n  try {\r\n    const res = await axios.post(\r\n      \"https://recruitment.ultimate.systems/to-do-lists\",\r\n      body,\r\n      config\r\n    );\r\n    console.log(res.data);\r\n    dispatch({\r\n      type: CREATE_LIST,\r\n      payload: res.data,\r\n    });\r\n    dispatch(setAlert(\"List created!\", \"success\", 3000));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: LIST_ERROR,\r\n    });\r\n    dispatch(setAlert(err.message, \"danger\", 3000));\r\n  }\r\n};\r\n\r\nexport const getLists = () => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  try {\r\n    const res = await axios.get(\r\n      \"https://recruitment.ultimate.systems/to-do-lists\",\r\n      config\r\n    );\r\n    dispatch({\r\n      type: GET_LISTS,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: LIST_ERROR,\r\n    });\r\n    dispatch(setAlert(err.message, \"danger\", 3000));\r\n  }\r\n};\r\n\r\nexport const editList = (id, listData) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  const { name } = listData;\r\n  const task = listData.task.map(({ id, ...rest }) => rest);\r\n  const body = JSON.stringify({ name, task });\r\n  try {\r\n    const res = await axios.put(\r\n      `https://recruitment.ultimate.systems/to-do-lists/${id}`,\r\n      body,\r\n      config\r\n    );\r\n    dispatch({\r\n      type: EDIT_LIST,\r\n      payload: res.data,\r\n    });\r\n    dispatch(setAlert(\"List edited!\", \"success\", 3000));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: LIST_ERROR,\r\n    });\r\n    dispatch(setAlert(err.message, \"danger\", 3000));\r\n  }\r\n};\r\n\r\nexport const deleteList = (id) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  try {\r\n    const res = await axios.delete(\r\n      `https://recruitment.ultimate.systems/to-do-lists/${id}`,\r\n      config\r\n    );\r\n    dispatch({\r\n      type: DELETE_LIST,\r\n      payload: res.data,\r\n    });\r\n    dispatch(setAlert(\"List deleted!\", \"info\", 3000));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: LIST_ERROR,\r\n    });\r\n    dispatch(setAlert(err.message, \"danger\", 3000));\r\n  }\r\n};\r\n\r\nexport const sortLists = (option) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  try {\r\n    const res = await axios.get(\r\n      `https://recruitment.ultimate.systems/to-do-lists?_sort=${option}`,\r\n      config\r\n    );\r\n    console.log(res.data);\r\n    dispatch({\r\n      type: SORT_LISTS,\r\n      payload: res.data,\r\n    });\r\n    dispatch(setAlert(\"List sorted!\", \"info\", 3000));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: LIST_ERROR,\r\n    });\r\n    dispatch(setAlert(err.message, \"danger\", 3000));\r\n  }\r\n};\r\n","import React, { useState } from \"react\";\r\nimport ListModal from \"./ListModal\";\r\nimport \"./ListItem.scss\";\r\n\r\nconst ListItem = ({ name, createdAt, completed, uncompleted, tasks, id }) => {\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const toggleModal = () => {\r\n    setIsModalOpen(!isModalOpen);\r\n  };\r\n  return (\r\n    <>\r\n      <div className='ListItem' onClick={toggleModal}>\r\n        <div className='ListItem__name'>{name}</div>\r\n        <div className='ListItem__date'>\r\n          {\"Created at: \" + createdAt.substr(0, 19).replace(\"T\", \" \")}\r\n        </div>\r\n        <div className='ListItem__wrapper'>\r\n          <div className='ListItem__completed'>{\"Completed: \" + completed}</div>\r\n          <div className='ListItem__uncompleted'>\r\n            {\"Uncompleted: \" + uncompleted}\r\n          </div>\r\n          <div className='ListItem__all'>\r\n            {\"All: \" + (completed + uncompleted)}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {isModalOpen ? (\r\n        <ListModal\r\n          id={id}\r\n          name={name}\r\n          tasks={tasks}\r\n          handler={toggleModal}\r\n        ></ListModal>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ListItem;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ListItem from \"./ListItem\";\r\nimport ListModal from \"./ListModal\";\r\nimport \"./ListWrapper.scss\";\r\nimport { getLists, sortLists } from \"../../redux/actions/list\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst ListWrapper = ({\r\n  getLists,\r\n  sortLists,\r\n  list: { loading, list },\r\n  auth,\r\n}) => {\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const toggleModal = () => {\r\n    setIsModalOpen(!isModalOpen);\r\n  };\r\n\r\n  const [searchInput, setSearch] = useState(\"\");\r\n  const [selectType, setSelectType] = useState([\r\n    \"name\",\r\n    \"created_at\",\r\n    \"updated_at\",\r\n  ]);\r\n\r\n  const handleSelectTypeChange = (e) => selectType[e.target.value];\r\n\r\n  const countCompleted = (tasks, type) => {\r\n    let completed = 0;\r\n    let uncompleted = 0;\r\n    tasks.task.map((item) => {\r\n      if (item.isDone === true) {\r\n        return completed++;\r\n      } else {\r\n        return uncompleted++;\r\n      }\r\n    });\r\n    return type === \"completed\" ? completed : uncompleted;\r\n  };\r\n\r\n  /* const sortOption = (option, a, b) => {\r\n    if (option === \"Name\") {\r\n      if (a.firstname < b.firstname) {\r\n        return -1;\r\n      }\r\n      if (a.firstname > b.firstname) {\r\n        return 1;\r\n      }\r\n      return 0;\r\n    }\r\n  };*/\r\n\r\n  useEffect(() => {\r\n    if (!auth.loading) {\r\n      getLists();\r\n    }\r\n  }, [auth.loading, getLists]);\r\n  return (\r\n    <div className={\"ListWrapper\"}>\r\n      <div className='ListWrapper__inputWrapper'>\r\n        <input\r\n          type='text'\r\n          placeholder='Search'\r\n          name='search'\r\n          className='ListWrapper__input'\r\n          value={searchInput}\r\n          onChange={(e) => setSearch(e.target.value)}\r\n        ></input>\r\n        <select\r\n          id='options'\r\n          name='Sort by'\r\n          className='ListWrapper__select'\r\n          onChange={(e) => {\r\n            handleSelectTypeChange(e);\r\n            sortLists(e.target.value);\r\n          }}\r\n        >\r\n          {selectType.map((item) => (\r\n            <option value={item}>{item}</option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n      {!loading ? (\r\n        list.map((listItem) =>\r\n          listItem.name\r\n            .toLowerCase()\r\n            .trim()\r\n            .includes(searchInput.toLowerCase().trim()) ? (\r\n            <ListItem\r\n              name={listItem.name}\r\n              createdAt={listItem.created_at}\r\n              completed={countCompleted(listItem, \"completed\")}\r\n              uncompleted={countCompleted(listItem)}\r\n              tasks={listItem.task}\r\n              handler={toggleModal}\r\n              id={listItem.id}\r\n              key={listItem.id}\r\n            />\r\n          ) : null\r\n        )\r\n      ) : (\r\n        <div className='ListWrapper__loading'></div>\r\n      )}\r\n      {list && list.length === 0 && !loading ? (\r\n        <div className='ListWrapper__info'>Nothing here :/</div>\r\n      ) : null}\r\n\r\n      <div className='ListWrapper__addButton' onClick={toggleModal}></div>\r\n      {isModalOpen ? (\r\n        <ListModal name='List name' handler={toggleModal} />\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nListWrapper.propTypes = {\r\n  getLists: PropTypes.func.isRequired,\r\n  sortLists: PropTypes.func.isRequired,\r\n  list: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  list: state.list,\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getLists, sortLists })(ListWrapper);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  auth: { isAuthenticated, loading },\r\n  ...rest\r\n}) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) =>\r\n      !isAuthenticated && !loading ? (\r\n        <Redirect to='/todo-list/' />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nPrivateRoute.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import {\r\n  LOGOUT,\r\n  USER_LOADED,\r\n  LOGIN_FAIL,\r\n  LOGIN_SUCCESS,\r\n  REGISTER_FAIL,\r\n  REGISTER_SUCCESS,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  token: localStorage.getItem(\"token\"),\r\n  isAuthenticated: null,\r\n  loading: true,\r\n};\r\n\r\nexport default function authReducer(state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case USER_LOADED:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n      };\r\n    case LOGIN_SUCCESS:\r\n    case REGISTER_SUCCESS:\r\n      localStorage.setItem(\"token\", payload.jwt);\r\n      return {\r\n        ...state,\r\n        token: payload.jwt,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n      };\r\n    case REGISTER_FAIL:\r\n    case LOGIN_FAIL:\r\n    case LOGOUT:\r\n      localStorage.removeItem(\"token\");\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SET_ALERT, REMOVE_ALERT } from \"../actions/types\";\r\n\r\nconst initialState = [];\r\n\r\nexport default function alertReducer(state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case SET_ALERT:\r\n      return [...state, payload];\r\n    case REMOVE_ALERT:\r\n      return state.filter((alert) => alert.id !== payload);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  CREATE_LIST,\r\n  EDIT_LIST,\r\n  DELETE_LIST,\r\n  LIST_ERROR,\r\n  GET_LISTS,\r\n  SORT_LISTS,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  list: [],\r\n  loading: true,\r\n};\r\n\r\nexport default function authReducer(state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case CREATE_LIST:\r\n      return {\r\n        ...state,\r\n        list: [...state.list, payload],\r\n        loading: false,\r\n      };\r\n    case GET_LISTS:\r\n      return {\r\n        ...state,\r\n        list: [...payload],\r\n        loading: false,\r\n      };\r\n    case EDIT_LIST:\r\n      return {\r\n        ...state,\r\n        list: [...state.list.filter((item) => item.id !== payload.id), payload],\r\n        loading: false,\r\n      };\r\n    case LIST_ERROR: {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n    }\r\n    case DELETE_LIST: {\r\n      return {\r\n        ...state,\r\n        list: [...state.list.filter((item) => item.id !== payload.id)],\r\n        loading: false,\r\n      };\r\n    }\r\n    case SORT_LISTS: {\r\n      return {\r\n        ...state,\r\n        list: [...payload],\r\n        loading: false,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport auth from \"./auth\";\r\nimport alert from \"./alert\";\r\nimport list from \"./list\";\r\n\r\nexport default combineReducers({\r\n  auth,\r\n  alert,\r\n  list,\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./redux/reducers\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./Alert.scss\";\r\n\r\nconst Alert = ({ alerts }) => {\r\n  return (\r\n    <>\r\n      {alerts !== null && alerts.length > 0 ? (\r\n        alerts.map((alert) => (\r\n          <div className={`alert alert--${alert.alertType}`} key={alert.id}>\r\n            {alert.msg}\r\n          </div>\r\n        ))\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nAlert.propTypes = {\r\n  alerts: PropTypes.array.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  alerts: state.alert,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Alert);\r\n","import React, { useEffect } from \"react\";\nimport Navbar from \"./components/layout/Navbar\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Login from \"./components/auth/Login\";\nimport Register from \"./components/auth/Register\";\nimport ListWrapper from \"./components/list/ListWrapper\";\nimport PrivateRoute from \"./components/routing/PrivateRoute\";\n\n//Redux\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport { loadUser } from \"./redux/actions/auth\";\nimport setAuthToken from \"./redux/utils/setAuthToken\";\nimport Alert from \"./components/layout/Alert\";\n\nconst App = () => {\n  useEffect(() => {\n    if (localStorage.token) {\n      setAuthToken(localStorage.token);\n    }\n    store.dispatch(loadUser());\n  }, []);\n  return (\n    <Provider store={store}>\n      <Router>\n        <Navbar />\n        <Alert />\n        <Switch>\n          <Route exact path='/todo-list' component={Login} />\n          <Route exact path='/todo-list/register' component={Register} />\n          <PrivateRoute\n            exact\n            path='/todo-list/ListWrapper'\n            component={ListWrapper}\n          />\n        </Switch>\n      </Router>\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}